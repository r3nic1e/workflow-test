name: Release

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  push:
    tags: ['*']

jobs:
  tagger:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Create tag
        id: tag
        uses: actions/github-script@v3
        if: github.event.pull_request.merged && startsWith(github.event.pull_request.head.ref, 'release-')
        with:
          github-token: ${{ github.token }}
          script: |
            const tag = context.payload.pull_request.head.ref.replace("release-", "")
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + tag,
              sha: context.payload.pull_request.merge_commit_sha
            })
            return tag
          result-encoding: string
    outputs:
      tag: ${{ steps.tag.outputs.result }}

  get-tag:
    runs-on: ubuntu-latest
    if: always()
    needs:
      - tagger
    steps:
      - name: get pushed tag
        id: pushed
        if: needs.tagger.result != 'success'
        run: echo "::set-output name=tag::${refs/tags/#$GITHUB_REF}"

      - name: get created tag
        id: created
        run: echo "::set-output name=tag::$TAG"
        if: needs.tagger.result == 'success'
        env:
          TAG: "${{ needs.tagger.outputs.tag }}"
    outputs:
      tag: ${{ steps.pushed.outputs.tag }}${{ steps.created.outputs.tag }}

  release:
    runs-on: ubuntu-latest
    needs:
      - get-tag
    steps:
      - run: echo $TAG
        env:
          TAG: "${{ needs.get-tag.outputs.tag }}"
